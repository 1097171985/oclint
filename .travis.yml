language: cpp

matrix:
  include:
    - os: linux
      dist: trusty
      sudo: required
      env: BUILD="test" MODULE="core"
    - os: linux
      dist: trusty
      sudo: required
      env: BUILD="test" MODULE="metrics"
    - os: linux
      dist: trusty
      sudo: required
      env: BUILD="test" MODULE="rules" DEP="core metrics"
    - os: linux
      dist: trusty
      sudo: required
      env: BUILD="test" MODULE="reporters" DEP="core"
    - os: linux
      dist: trusty
      sudo: required
      env: BUILD="test" MODULE="driver" DEP="core"
    - os: linux
      dist: trusty
      sudo: required
      env: BUILD="build"
    - os: linux
      dist: trusty
      sudo: required
      env: BUILD="docgen"
    - os: osx
      osx_image: xcode7.3
      env: BUILD="test" MODULE="core"
    - os: osx
      osx_image: xcode7.3
      env: BUILD="test" MODULE="metrics"
    - os: osx
      osx_image: xcode7.3
      env: BUILD="test" MODULE="rules" DEP="core metrics"
    - os: osx
      osx_image: xcode7.3
      env: BUILD="test" MODULE="reporters" DEP="core"
    - os: osx
      osx_image: xcode7.3
      env: BUILD="test" MODULE="driver" DEP="core"
    - os: osx
      osx_image: xcode7.3
      env: BUILD="build"
    - os: osx
      osx_image: xcode8
      env: BUILD="test" MODULE="core"
    - os: osx
      osx_image: xcode8
      env: BUILD="test" MODULE="metrics"
    - os: osx
      osx_image: xcode8
      env: BUILD="test" MODULE="rules" DEP="core metrics"
    - os: osx
      osx_image: xcode8
      env: BUILD="test" MODULE="reporters" DEP="core"
    - os: osx
      osx_image: xcode8
      env: BUILD="test" MODULE="driver" DEP="core"
    - os: osx
      osx_image: xcode8
      env: BUILD="build"
    - os: osx
      osx_image: xcode8
      env: BUILD="docgen"

before_install:
- if [ $TRAVIS_OS_NAME == osx ]; then
    brew update;
    brew install cmake;
    brew install python;
  fi
- sudo pip install cpp-coveralls

script:
  - cd oclint-scripts
  - ./travis $BUILD $MODULE $DEP
  - cd ..

after_success:
  - if [ $BUILD == test ]; then
      coveralls --gcov $PWD/build/llvm-install/bin/llvm-cov --gcov-options gcov --include oclint-${MODULE}/ --exclude oclint-${MODULE}/test;
    fi

addons:
  artifacts:
    paths:
      - $(ls build/oclint-*.tar.gz)
